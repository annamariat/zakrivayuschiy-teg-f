/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

*/

.page {
  font-family: var(--main-font-Inter, sans-serif);
  display: grid;
  place-content: center;
  min-inline-size: 320px;
  min-block-size: 100dvb;
  margin-block: 0;
  background-color: var(--themes-mainColor, #ffffff);
  color: var(---accent-color, #000000);
  background-image: var(--background-image, none);
  background-attachment: fixed;
  background-size: cover;
}

.header {
  font-family: var(--accent-font-PressStart2P);
  position: relative;
  z-index: 0;
  display: grid;
  grid-template-rows: repeat(2, 1fr);
  gap: 25px;
  justify-items: center;
  border: 2px solid var(--accent-color, #000000);
  background-color: var(--themes-mainColor, #ffffff);
  /*font-size: использовать clamp?*/
  inline-size: 700px;
  block-size: 368px;
  margin-block-start: 100px;
  margin-block-end: 102px;
  /*padding отступы в шапке используйте clamp?*/
}

.page__section {
  max-inline-size: var(--header-inline-desktop, 100%);
}

@media (width<=375px) {
  /*на мобильном устройстве растените их на вс ширину
  для реализации этой ширины удобно внедрить дополнительный класс
  а размер вынести в перемнную!*/
  .page__section {
    inline-size: var(--header-inline-mobile, 50%);
  }
}

.page__header {
  max-inline-size: var(--header-inline-desktop, 100%);
}

@media (width<=375px) {
  .page__header {
    max-inline-size: var(--header-inline-desktop, 100%);
  }
}

.logo-group {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  gap: 20px;
  color: var(--accent-color, #000000);
  text-transform: uppercase;
  margin-block-start: 136px;
  padding: 0 5vi;
}

.header__logo {
  /*font-size: использовать clamp?*/
  font-weight: var(--card-header-thickness, 700);
  line-height: 100%;
  font-size: 65px;
}

.header__title {
  /*font-size: использовать clamp? var(--title-size-mobile: clamp()*/
  font-size: 23px;
  line-height: 100%;
  font-weight: var(--card-header-thickness, 700);
}

@media (width<=375px) {
  .header__title {
    font-size: var(--title-size-mobile, clamp());
  }
}

.header__theme-menu-list {
  display: flex;
  flex-direction: column;
  text-align: center;
  gap: 10px;
}

.theme-menu__button {
  position: relative;
  font-family: inherit;
  color: var(--accent-color, #000000);
  background-color: transparent;
  cursor: var(--cursor, auto);
  user-select: none; /*можно нажать но выделение текста нежелательно*/
  text-transform: uppercase;
  border: none;
  font-size: 14px;
  line-height: 100%;
  padding: 0;
}

.theme-menu__button:hover {
  /*ПРИ НАВЕДЕНИИ КУРСОРА МЕНЯЕТСЯ ЦВЕТ*/
  opacity: 0.6;
  transition: opacity 0.3s ease;
}

.theme-menu__button:focus {
  outline: none;
  opacity: 0.6;
}

.theme-menu__button:focus-visible {
  opacity: 0.6;
  transform: scaleX(1);
}

.theme-menu__button:not(:disabled)::after {
  /*происходит подчеркивание _______*/
  display: block;
  content: "";
  width: 0%;
  block-size: 2px;
  margin-block-end: -2px;
  background-color: var(--accent-color, #000000);
  transform-origin: left;
  transition: transform 0.3s ease-in-out;
  transform: scaleX(0);
}
.theme-menu__button:focus-visible::after {
  transform: scaleX(1);
  width: 100%;
}

.theme-menu__button:disabled {
  /*для реализации стрелочки у меню*/
  pointer-events: none;
  opacity: 0.6;
  transition: opacity 0.3s ease;
}

.theme-menu__button:disabled:before {
  /*ДВИГАЮЩАЯСЯ СТРЕЛКА ОКОЛО АКТИВНОГО ПУНКТА МЕНЮ*/
  position: absolute;
  content: "▶";
  left: -25px;
  opacity: 60%;
  line-height: 100%;
  text-transform: uppercase;
  animation-name: rotatemove;
  animation-duration: 0.5s;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

@keyframes rotatemove {
  0% {
    transform: translate(0);
  }

  100% {
    transform: translate(4px);
  }
}

/*main*/

.content {
  display: grid;
  gap: 54px;
  font-weight: var(--thickness-main-text, 400);
}

.post-section {
  background-color: var(--themes-mainColor, #ffffff);
  border: 2px solid var(--accent-color, #000000);
  grid-template-rows: min-content 1fr 1fr;
  max-inline-size: 696px; /*при изменении на просто инлайн сайз не меняется картинка*/
}

.post-title {
  font-family: var(--main-font-Inter, Inter, sans-serif);
  font-weight: var(--card-header-thickness, 700);
  color: var(--accent-color, #000000);
  font-size: 18px;
  line-height: 100%;
  border-bottom: 2px solid var(--accent-color, #000000);
  padding: 8px 24px 7px 10px;
}

.post-content__item {
  min-height: 371px;
}

.post-card {
  /*font-size: использовать clamp или относительные ед.изм.?*/
}

@media (width<=375px) {
  .post-card {
    /*font-size: использовать clamp или относительные ед.изм.?*/
  }
  /*font-size: использовать clamp или относительные ед.изм.?*/
  /*нужен доп.класс для реализации ширины а размер вынести в переменную?*/
}

.post-card-container {
  position: relative;
  overflow: hidden;
}

.label {
  position: absolute;
  z-index: 1;
  font-family: var(--accent-font-PressStart2P, Lato);
  font-size: 14px;
  line-height: 100%;
  text-transform: uppercase;
  top: 25px;
  right: 25px;
  color: var(--accent-color, #000000);
  opacity: 50%;
  mix-blend-mode: hard-light;
  text-shadow: -1px 0 var(--text-stroke-color, #ffffff),
    0 1px var(--text-stroke-color, #ffffff),
    1px 0 var(--text-stroke-color, #ffffff),
    0 -1 var(--text-stroke-color, #ffffff);
}

@supports (
  (text-stroke: 1px var(--text-stroke-color, #ffffff)) or
    (-webkit-text-stroke: 1px var(--text-stroke-color, #ffffff))
) {
  .label {
    -webkit-text-stroke: 1px var(--text-stroke-color, #ffffff);
    text-shadow: none;
  }
}

.images-card {
  display: block;
  inline-size: 100%;
  block-size: 100%;
  object-fit: cover;
  object-position: center;
  border-bottom: 2px solid var(--accent-color, #000000);
}

.image-card-second {
  filter: sepia(100%);
  -webkit-filter: sepia(100%);
}

.image-card-third {
  filter: brightness(1.5) hue-rotate(-90deg);
  -webkit-filter: brightness(1.5) hue-rotate(-90deg);
}

.hue-animate .image-card-fourth {
  animation: rotate-colors 2s linear infinite;
}

.image-card-fifth {
  filter: grayscale(0.4) blur(5px);
}

.image-card-sixth {
  filter: hue-rotate(90deg);
}

.image-card-seventh {
  filter: grayscale(1);
  -webkit-filter: grayscale(1);
}

.image-card-eighth {
  filter: saturate(158%);
}

.card-text-content {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: 27px;
  padding: 25px 25px 25px 25px;
}

.card-text-content__paragraph {
  font-family: var(--main-font-Inter, Inter, sans-serif);
  font-weight: var(--thickness-main-text, 400);

  color: var(--accent-color, #000000);
  font-size: 18px;
  line-height: 21px;
}

.button {
  /*Общая кнопок Like  Сохранить и Ok в теге <dialog> */
  font-family: var(--accent-font-PressStart2P, Lato);
  font-weight: var(--thickness-main-tex, 400);
  font-size: 14px;
  line-height: 90%;
  background-color: transparent;
  border: none;
  padding: 0;
  cursor: var(--cursor, auto);
}

/*Кнопка Like + svg */
.card__controls {
  display: flex;
  align-items: flex-start;
  justify-content: flex-end;
  gap: 3px;
  margin-inline-end: 25px;
  margin-block-end: 25px;
}

.card__icon-button {
  background-color: transparent;
  border: none;
  block-size: 38px;
  padding: 0;
  cursor: var(--cursor, auto);
}

.card__icon-button:focus {
  outline: none;
}

.card__icon-button:focus-visible {
  border: 2px solid var(--accent-color, #000000);
}

.card__like-button {
  position: relative;
  overflow: hidden;
  background-color: transparent;
  inline-size: 130px;
  block-size: 38px;
  border: 2px solid var(--accent-color, #000000);
  padding: 0;
  cursor: pointer;
}

.card__like-button:focus {
  outline: none;
}

.card__like-button:focus-visible {
  outline: none;
  box-shadow: 2px 2px 0px 0px var(--box-shadow, rgba(0, 0, 0, 1));
  transition: box-shadow 0.5s ease-in-out;
}

/*Общие стили на текста Like  Сохранить и Ok в теге <dialog> */
.button__text {
  font-family: var(--accent-font-PressStart2P, Lato);
  font-weight: var(--thickness-main-tex, 400);
  font-size: 14px;
  line-height: 90%;
  background-color: transparent;
  color: var(--color-text, #000000);
  cursor: var(--cursor, auto);
}

.button__text::first-letter {
  text-transform: uppercase;
}

.button__text::before {
  position: absolute;
  content: "";
  inset: 0;
  background-color: var(--color-mixing, #ffffff);
  transition: transform 0.5s ease-in-out;
  transform: translate(-100%);
  mix-blend-mode: difference;
}

.button__text:hover::before {
  transform: scale(1.1);
}

/*Анимация сердечка*/
.sparks {
  opacity: 0;
}

/*hover*/
.core:hover {
  fill: var(--countour-svg, #000000);
  transition-property: fill;
  transition-duration: 0.3s;
  transition-timing-function: linear;
}

.like-icon:hover .core {
  fill: var(--countour-svg, #000000);
  transition-property: fill;
  transition-delay: 0.03s;
  transition-timing-function: linear;
}

.main-body {
  fill: transparent;
}

.main-body:hover {
  fill: var(--countour-svg, #000000);
  transition-property: fill;
  transition-duration: 0.3s;
  transition-delay: 0.05s;
  transition-timing-function: linear;
}
.like-icon:hover.main-body {
  fill: var(--countour-svg, #000000);
  transition-property: fill;
  transition-duration: 0.3s;
  transition-timing-function: linear;
}

/*active*/
.core:active {
  fill: var(--filling-svg, #ff0000);
  transition-property: fill;
  transition-duration: 0.3s;
  transition-timing-function: linear;
}

.like-icon:active .core {
  fill: var(--filling-svg, #ff0000);
  transition-property: fill;
  transition-delay: 0.03s;
  transition-timing-function: linear;
}

.main-body {
  fill: transparent;
}

.main-body:active {
  fill: var(--filling-svg, #ff0000);
  transition-property: fill;
  transition-duration: 0.3s;
  transition-delay: 0.05s;
  transition-timing-function: linear;
}
.like-icon:active.main-body {
  fill: var(--filling-svg, #ff0000);
  transition-property: fill;
  transition-duration: 0.3s;
  transition-timing-function: linear;
}

/*Вот что происходит при клике))*/
/*закрашивается сердцевина*/
.like-icon.is-liked .core {
  fill: var(--filling-svg, #ff0000);
  transition-property: fill;
  transition-duration: 0.3s;
  transition-timing-function: linear;
}

/*C небольшой задержкой закрашивается основное тело*/
.like-icon.is-liked .main-body {
  fill: var(--filling-svg, #ff0000);
  transition-property: fill;
  transition-duration: 0.3s;
  transition-timing-function: linear;
}

/*Еще с больщей задержкой закрашивается контур*/
.like-icon.is-liked .contour {
  fill: var(--filling-svg, #ff0000);
  transition-property: fill;
  transition-duration: 0.3s;
  transition-delay: 0.06s;
}

/*Как вернуть контур черненький */
.contour.is-liked {
  fill: var(--countour-svg, #000000);
  transition-property: fill;
  transition-duration: 0.1s;
  transition-timing-function: linear;
}

/*Как вернуть черненкий контур*/
.like-icon {
  fill: var(--countour-svg, #000000);
}

/*Происходит небольшое масштабирование сердца и возврат к исходному состоянию*/
.like-icon.is-liked .sparks {
  fill: var(--filling-svg, #ff0000);
  animation-name: sparks;
  animation-duration: 0.3s;
  animation-timing-function: 0.3s;
  animation-iteration-count: 1;
  transition-property: sparks;
  transition-timing-function: ease-in;
  animation-direction: normal;
}

.like-icon.is-liked {
  fill: var(--filling-svg, #ff0000);
  animation-name: scale;
  animation-timing-function: 0.1s;
  animation-duration: 0.3s;
  animation-iteration-count: 1;
  animation-direction: normal;
  transition: scale 0.3s ease-in;
  transform-origin: center center;
}

/*footer*/

.footer {
  display: flex;
  justify-content: center;
  margin-block-start: 52px;
  margin-block-end: 103px;
}

.card__save-button {
  position: relative;
  overflow: hidden;
  cursor: pointer;
  display: flex;
  gap: 8px;
  align-items: center;
  justify-content: center;
  inline-size: 335px;
  block-size: 55px;
  border: 2px solid var(--color-text);
  padding: 0;
  background-color: var(--themes-mainColor, #ffffff);
}

@media (width<=375px) {
  .card__save-button {
    display: flex;
    flex-direction: column;
    inline-size: 306px;
    block-size: 84px;
  }
}

.card__save-button:focus {
  outline: none;
}

.card__save-button:focus-visible {
  outline: none;
  box-shadow: 2px 2px 0px 0px var(--box-shadow, rgba(0, 0, 0, 1));
  transition: box-shadow 0.5s ease-in-out;
}

.floppy__svg {
  border: none;
}

.floppy__svg:focus {
  background-color: transparent;
  border: none;
  outline: none;
}

/*ДИАЛОГ*/

dialog {
  position: fixed;
  inset: 0;
  display: grid;
  align-items: center;
  gap: 30px;
  border-width: 1px;
  transition: opacity 0.3s ease-in-out;
  inline-size: 353px;
  block-size: 191px;
  padding: 30px;
  overflow: hidden;
  background-color: var(--themes-mainColor, #ffffff);
}

@media (width <= 375px) {
  dialog {
    inline-size: 80%;
  }
}

dialog:not([open]) {
  opacity: 0;
  pointer-events: none;
}

.dialog::backdrop {
  background-color: var(--dialog-backdrop, #000000);
  opacity: 0.75;
}

.dialog__text {
  color: var(--color-text, #000000);
  font-family: var(--accent-font-PressStart2P);
  font-size: 14px;
  line-height: 1.5;
  text-transform: uppercase;
}

.button-close {
  position: relative;
  overflow: hidden;
  inline-size: 293px;
  block-size: 38px;
  color: var(--accent-color, #000000);
  cursor: var(--cursor, auto);
  text-transform: uppercase;
  border: 2px solid var(--accent-color, #000000);
}
